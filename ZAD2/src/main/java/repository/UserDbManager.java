package repository;

import domain.User;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class UserDbManager {
    private Connection connection;
    public static final String url="jdbc:hsqldb:hsql://localhost/workdb";
    public static final String usr="SA";
    public static final String pas="";

    private Statement statement;

    private String createUserTable =""
            + "CREATE TABLE user("
            + "id bigint GENERATED BY DEFAULT AS IDENTITY,"
            + "username VARCHAR(20),"
            + "password VARCHAR(50),"
            + "e-mail NVARCHAR(100), "
            + "type VARCHAR(40)"
            + ")";

    private String insertSql ="INSERT INTO user(username,password,e-mail,type) VALUES(?,?,?,?)";
    private String selectSql ="SELECT * FROM user";
    private String deleteSql = "DELETE FROM user WHERE id=?";
    private String updateSql = "UPDATE user SET (username,password,e-mail,type)=(?,?,?,?) WHERE id=?";


    private PreparedStatement insert;
    private PreparedStatement update;
    private PreparedStatement select;
    private PreparedStatement delete;

    public UserDbManager(){

        try {
            this.connection = DriverManager.getConnection(url,usr,pas);

            insert = this.connection.prepareStatement(insertSql);
            select = this.connection.prepareStatement(selectSql);
            delete = this.connection.prepareStatement(deleteSql);
            update = this.connection.prepareStatement(updateSql);

            ResultSet rs = this.connection.getMetaData().getTables(null, null, null, null);

            boolean tableExists =false;
            while(rs.next())
            {
                if(rs.getString("TABLE_NAME").equalsIgnoreCase("user")){
                    tableExists=true;
                    break;
                }
            }

            if(!tableExists){
                Statement createTable = this.connection.createStatement();
                createTable.executeUpdate(createUserTable);
            }


        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void add(User user){

        try {
            insert.setString(1, user.getUsername());
            insert.setString(2, user.getPassword());
            insert.setString(3, user.getEmail());
            insert.setString(4, user.getType());
            insert.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    public void deleteById(int id){

        try {
            delete.setInt(1, id);
            delete.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    public void update(User p){

        try {
            update.setString(1, p.getUsername());
            update.setString(2, p.getPassword());
            update.setString(3, p.getEmail());
            update.setString(4, p.getType());
            update.setInt(5, p.getId());
            update.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }

    public List<User> getAll(){

        List<User> result = new ArrayList<User>();

        try {
            ResultSet rs = select.executeQuery();
            while(rs.next()){
                User user = new User();
                user.setUsername(rs.getString("username"));
                user.setPassword(rs.getString("password"));
                user.setEmail(rs.getString("e-mail"));
                user.setType(rs.getString("type"));
                user.setId(rs.getInt("id"));
                result.add(user);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return result;
    }


}
